/*
 * Stm32_F103C6_gpio_driver.c
 *
 *  Created on: Sep 18, 2021
 *      Author: hassan
 */
#include"Stm32_F103C6_UART_driver.h"
#include"Stm32_F103C6_gpio_driver.h"
//-----------------------------
/*
 * ===============================================
 * Generic Variables by "MCAL USART DRIVER"
 * ===============================================
 */
UART_Config_t * Global_UART1_Config;
UART_Config_t * Global_UART2_Config;
UART_Config_t * Global_UART3_Config;
/*
 * ===============================================
 * Generic Macros by "MCAL EXTI DRIVER"
 * ===============================================
 */

/*
 * ===============================================
 * Generic Functions by "MCAL EXTI DRIVER"
 * ===============================================
 */

/*
 * ===============================================
 * APIs Supported by "MCAL USART DRIVER"
 * ===============================================
 */
/**================================================================
 * @Fn-				MCAL_EXTI_Init
 * @brief -			Initialize Specific USART according the config struct
 * @param [in] -	Cofiguration structure, usart instance
 * @param [out] -	None
 * @retval -			None
 * Note-
 */
void MCAL_USART_init(UART_Config_t *UART_Config , USART_t* USARTx){
	uint16 pclk,BRR;

	/*            Enable USART clocks      */
	if (USARTx == USART1) {
		RCC_USART1_CLK_EN();
		Global_UART1_Config=UART_Config;
		pclk=MCAL_RCC_GetPCLK2();
	} else if (USARTx == USART2) {
		RCC_USART2_CLK_EN();
		Global_UART2_Config=UART_Config;
		pclk=MCAL_RCC_GetPCLK2();
	} else if (USARTx == USART3) {
		RCC_USART3_CLK_EN();
		Global_UART3_Config=UART_Config;
		pclk=MCAL_RCC_GetPCLK2();
	}

	/*            Enable USART Module    	  */
	//Bit 13 UE: USART enable
	USARTx->CR1 |=(1<<13);
	USARTx->CR1 |=UART_Config->USART_Mode;
	USARTx->CR1 |=UART_Config->Payload_Length;
	USARTx->CR1 |=UART_Config->Parity;

	USARTx->CR2 |=UART_Config->StopBits;
	USARTx->CR3 |=UART_Config->HWFlowCtl;

	BRR = USART_BRR_Register(pclk,UART_Config->BaudRate);
	USARTx->BRR = BRR ;

	if (UART_Config->IRQ_Enable != USART_NONE)
	{
		USARTx->CR1 |= UART_Config->IRQ_Enable ;
		//enable NVIC for USART IRQ
		if (USARTx == USART1)
		{
			NVIC_IRQ37_USART1_Enable ;
		}
		else if (USARTx == USART2)
		{
			NVIC_IRQ38_USART2_Enable ;
		}
		else if (USARTx == USART3)
		{
			NVIC_IRQ39_USART3_Enable ;
		}
	}

}
void MCAL_USART_DeInit(USART_t *USARTx);

void MCAL_USART_SetPins(USART_t *USARTx);

void MCAL_USART_Send(USART_t *USARTx , uint16 *pTxBuffer , enum Polling_Mechanism PollingEn );
void MCAL_USART_Recieve(USART_t *USARTx , uint16 *pTxBuffer , enum Polling_Mechanism PollingEn );

void MCAL_USART_Wait_TC(USART_t *USARTx);


/**================================================================
 * @Fn-				MCAL_EXTI_DeInit
 * @brief -			Reset EXTI Registers and NVIC
 * @param [in] -		void
 * @param [out] -	void
 * @retval -			void
 * Note-				STM32F103C6 MCU has PORTS A,B,C,D,E
 * 					While LQFP84 Has only A,B and Part of C,D
 */
