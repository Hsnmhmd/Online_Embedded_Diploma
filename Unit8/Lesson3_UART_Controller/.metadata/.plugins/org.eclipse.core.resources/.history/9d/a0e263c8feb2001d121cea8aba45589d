/*
 * Stm32_F103C6_gpio_driver.h
 *
 *  Created on: Sep 18, 2021
 *      Author: hassan
 */

#ifndef INC_STM32_F103C6_UART_DRIVER_H_
#define INC_STM32_F103C6_UART_DRIVER_H_

//Includes
#include<stm32f103x6.h>
#include"Stm32_F103C6_gpio_driver.h"
#include"Stm32_F103C6_UART_driver.h"
#include"Stm32_F103C6_RCC_driver.h"
//USARTDIV = fclk /(16*Baudrate)
//USARTDIV_Mul100  = (uint32)(100*fclk)/(16*Baudrate)
//USARTDIV_Mul100  = (uint32)(25*fclk)/(4*Baudrate)
//DIV_Mantissa_MUL100 = Integar part (USARTDIV) *100
//DIV_Mantissa = Integar part (USARTDIV)
//DIV_Fraction = ((USARTDIV_Mul100 - DIV_Mantissa_MUL100 ) * 16 )/100)

#define USARTDIV(_PCLK_,_BAUD_)          		 (uint32_t)(_PCLK_/(16 * _BAUD_))
#define USARTDIV_Mul100(_PCLK_,_BAUD_)           (uint32_t)((25 * _PCLK_)/(4 * _BAUD_))
#define Mantissa_MUL100(_PCLK_,_BAUD_)           (uint32_t) (USARTDIV(_PCLK_,_BAUD_) * 100)
#define Mantissa(_PCLK_,_BAUD_)                	 (uint32_t) (USARTDIV(_PCLK_,_BAUD_))
#define DIV_Fraction(_PCLK_,_BAUD_)            	 (uint32_t) (( USARTDIV_Mul100(_PCLK_,_BAUD_)  - Mantissa_MUL100(_PCLK_,_BAUD_)) * 16 )
#define USART_BRR_Register(_PCLK_,_BAUD_)        ( (Mantissa(_PCLK_,_BAUD_)) <<4 ) | ( (DIV_Fraction(_PCLK_,_BAUD_)) & 0xF)
enum Polling_Mechanism{
	Enable,
	Disable
};

//-----------------------------
//CONFIG (structures)
typedef struct{
	uint8_t USART_Mode;    			//TX/RX Mode @ref USART_Mode_Define
	uint32_t BaudRate;				//Communication Baud Rate @ref BaudRate_Define
	uint8_t Payload_Length;     	//#of transmitted bits @ref Payload_Lentgh_Define
	uint8_t Parity;					//Parity Mode @ref USART_Parity_Define
	uint8_t StopBits;				//#of stop bits @ref USART_StopBits_Define
	uint8_t HWFlowCtl;				//Hardware Flow Control @ref USART_HwFlowCtl_Define
	uint8_t IRQ_Enable;				//Enable Disable UART IR @ref USART_IRQ_Enable_Define
	void (*P_IRQ_CallBack)(void);
}UART_Config_t;

/*
 * ===============================================
 * APIs Supported by "MCAL UART DRIVER"
 * ===============================================*/
void MCAL_USART_init(UART_Config_t *UART_Config , USART_t* USARTx);
void MCAL_USART_DeInit(USART_t *USARTx);

void MCAL_USART_SetPins(USART_t *USARTx);

void MCAL_USART_Send(USART_t *USARTx , uint16 *pTxBuffer , enum Polling_Mechanism PollingEn );
void MCAL_USART_Recieve(USART_t *USARTx , uint16 *pTxBuffer , enum Polling_Mechanism PollingEn );

void MCAL_USART_Wait_TC(USART_t *USARTx);
//
//MACRO CONFIGRATION References
//
//@ref USART_Mode_Define
#define USART_MODE_RX			(uint32)(1<<2)
#define USART_MODE_TX			(uint32)(1<<3)
#define USART_MODE_TX_RX		(uint32)(1<<2 | 1<<3)
/*
 * @ref BaudRate_Define
 */
#define USART_BaudRate_2400						2400
#define USART_BaudRate_9600						9600
#define USART_BaudRate_19200					19200
#define USART_BaudRate_57600					57600
#define USART_BaudRate_115200					115200
#define USART_BaudRate_230400					230400
#define USART_BaudRate_460800					460800
#define USART_BaudRate_921600					921600
#define USART_BaudRate_2250000					2250000
#define USART_BaudRate_4500000					4500000
/*
 * @ref Payload_Lentgh_Define
 */
#define USART_Payload_Lentgh8						(uint32)(0)
#define USART_Payload_Lentgh9						(uint32)(1<<12)
/*
 * @ref USART_Parity_Define
 */
#define USART_Parity_None 						(uint32)(0)
#define USART_Parity_Even 						(uint32)(1<<10)
#define USART_Parity_Odd 						(uint32)(1<<10 | 1<<9)
/*
 *  @ref USART_StopBits_Define
 */
#define USART_StopBits_1						(uint32)(0)
#define USART_StopBits_half						(uint32)(1<<12)
#define USART_StopBits_2						(uint32)(2<<12)
#define USART_StopBits_1_half					(uint32)(3<<12)
/*
 * @ref USART_HwFlowCtl_Define
 */
#define USART_HwFlowCtl_NONE					(uint32)(0)
#define USART_HwFlowCtl_CTS						(uint32)(1<<9)
#define USART_HwFlowCtl_RTS						(uint32)(1<<8)
#define USART_HwFlowCtl_BOTH					(uint32)(1<<8 | 1<<9)
/*
 * @ref USART_IRQ_Enable_Define
 */
#define USART_NONE								(uint32)(0)
#define USART_RXIEN								(uint32)(1<<5)
#define USART_TXIEN								(uint32)(1<<7)
#define USART_TXIEN_RXIEN						(uint32)(1<<5 | 1<<7)
#define USART_TCIE								(uint32)(1<<6)
#define USART_PE								(uint32)(1<<8)
#endif /* INC_STM32_F103C6_UART_DRIVER_H_ */
