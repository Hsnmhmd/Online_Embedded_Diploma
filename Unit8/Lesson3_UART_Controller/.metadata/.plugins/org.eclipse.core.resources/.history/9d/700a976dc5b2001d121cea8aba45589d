/*
 * Stm32_F103C6_gpio_driver.c
 *
 *  Created on: Sep 18, 2021
 *      Author: hassan
 */

#include"Stm32f103x6.h"
#include"Stm32_F103C6_RCC_driver.h"
//-----------------------------
/*
 * ===============================================
 * Generic Variables by "MCAL RCC DRIVER"
 * ===============================================
 */
const uint8_t APBprescTable[8U]={0,0,0,0,1,2,3,4};
//There is no division by 32 so 5 is not included for AHB
const uint8_t AHBprescTable[8U]={0,0,0,0,0,0,0,0,1,2,3,4,6,7,8,9};
/*
 * ===============================================
 * Generic Macros by "MCAL RCC DRIVER"
 * ===============================================
 */

/*
 * ===============================================
 * Generic Functions by "MCAL RCC DRIVER"
 * ===============================================
 */

/*
 * ===============================================
 * APIs Supported by "MCAL RCC DRIVER"
 * ===============================================
 */
uint32_t MCAL_RCC_GetSYS_CLK(void){
	switch ( (RCC->CFGR >>2) &0b11 ){
	case 0:
		return HSI_RC_CLC;
		break;
	case 1:
		return HSE_CLC;
		break;
	case 0:
		//Needs to be calculated
		return 16000000;
		break;
	}

}
/**================================================================
 * @Fns-			MCAL_RCC_GetCLK
 * @brief -			GET the freq of each bus by dividing the input clock by the scaler
 * 					Get the value of the scaler from the scaler array according to CFGR register
 * @param [in] -	none
 * @param [out] -	None
 * @retval -		Freq
 * Note-
 */
uint32_t MCAL_RCC_GetHCLK(void){
	return (MCAL_RCC_GetSYS_CLK() >> AHBprescTable[( (RCC->CFGR >>4) &0b1111 )]);
}
// bits 8 :10 PPRE1 APB1 prescaler
uint32_t MCAL_RCC_GetPCLK1(void){
	return (MCAL_RCC_GetHCLK() >> APBprescTable[( (RCC->CFGR >>8) &0b111 )]);
}
// bits 11 :13 PPRE1 APB2 prescaler
uint32_t MCAL_RCC_GetPCLK2(void){
	return (MCAL_RCC_GetHCLK() >> APBprescTable[( (RCC->CFGR >>11) &0b111 )]);
}



